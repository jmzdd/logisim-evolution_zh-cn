#
# data/CsvInterpretor.java
#
CsvBitNotSpecified = Line %d of the csv file '%s' does not contain bit %d of variable '%s', aborting.
CsvDuplicatedBit = Line %d of the csv file '%s' contains twice the bit %d of the variable '%s', aborting.
CsvDuplicatedVar = Line %d of the csv file '%s' contains multiple times the variable '%s', aborting.
CsvIncorrectBitOrder = Line %d of the csv file '%s' contains a incorrect bit-sequence for variable '%s', aborting.
CsvIncorrectEmpty = Line %d of the csv file '%s' contains an incorrect empty field at position %d, aborting.
CsvIncorrectLine = Line %d of the csv file '%s' has %d entries instead of the %d required, aborting.
CsvIncorrectVarName = Line %d of the csv file '%s' contains the incorrect formatted label '%s', aborting.
CsvInvalidEntry = Line %d of the csv file '%s' contains an invalid entry '%s' at field %d, aborting.
CsvNoEntries = File "%s" does not contain any entries, aborting.
CsvNoInputsFound = Line %d of the csv file '%s' does not contain any inputs, aborting.
CsvNoSepFound = Line %d of the csv file '%s' contains no separator field, aborting.
CsvNotEnoughEmpty = Line %d of the csv file '%s' contains not enough empty fields after variable '%s', aborting.
#
# data/ExpressionRenderData.java
#
expressionEmpty = (空)
#
# file/AnalyzerTexWriter.java
#
latexBabelLanguage = 英语 english
latexEmpty = 空分析器 Empty analyzer
latexEmptyText = 由于在生成本文件时, 分析器没有输入变量和/或输出变量, 所以没有任何东西可以显示. As the analyzer did not have input variables and/or output variables at the moment this document was generated there is nothing to show.
latexHeader = Logisim-evolution generated document on %s
latexIntroduction = 简介
latexIntroductionText = 这个文件是由 logisim-evolution 生成的。如果你想使用这个生成的 TeX 源的 部分或全部内容, 请遵循下面原则 (1) 不要忘记包括所需的包。(2)加入一行注释, 以说明该源是由logisim-evolution生成的: This source was generated by logisim-evolution.
latexKarnaugh = 卡诺图
latexKarnaughEmpty = 空的卡诺图
latexKarnaughFilledIn = 填充卡诺图
latexKarnaughFilledInGroups = 覆盖填充的卡诺图 Filled in Karnaugh diagrams with covers
latexKarnaughText = 本节展示了给定函数的各种版本的卡诺图. This section shows various versions of the Karnaugh diagrams of the given functions.
latexKarnaughToBig = 无法显示输入变量超过 %d 的卡诺图。
latexMinimal = 最简表达式 Minimal expressions
latexTruthTable = 真值表
latexTruthTableComlete = 完整的真值表 Complete truth table
latexTruthTableCompact = 紧凑的真值表 Compacted truth table
latexTruthTableText = 该表可能大到无法在页面上显示.在生成时,没有计算表格的大小与页面的宽度/高度的关系. The table may be way to big to be displayed on the page. At generation time no calculation was done on the size of the table with respect to the width/height of the page.
latexTruthTableToBig = \\\\~\\\\真值表有超过 %d 的条目, 在这里显示没有意义. \\\\~\\\\The truth table has more than %d entries, it makes no sense to show it here.
tableLatexFilter = Logisim-evolution TeX 文件 (*.tex)
#
# file/TruthtableCsvFile.java
#
tableCsvFileFilter = Logisim-evolution 真值表 (*.csv)
#
# file/TruthtableTextFile.java
#
tableParseErrorMessage = 忽略错误重试?
tableParseErrorTitle = 错误解析真值表 Error Parsing Truth Table
tableRemark1 = # 真值表
tableRemark2 = # Generated from circuit %s
tableRemark3 = # Exported on %s
tableRemark4 = # 关于格式化的提示和说明: * 你可以编辑这个文件, 然后再把它导入Logisim! * '#'后面的任何东西都是注释, 将被忽略. * 空行和分隔线(例如。忽略空行和分隔线(例如,~~~~~~).\n# *保持列名简单(没有空格、标点符号等).\n# *'Name[N..0]'表示N+1位变量, 而'Name'本身表示1位变量.\n# *你可以使用'x'或'-'来表示\"不关心 "的输入和输出位.'10100011xxxx')符号, 或者是十六进制(例如,'C3x').Logisim会计算出哪个是哪个. Hints and Notes on Formatting:\n# * You can edit this file then import it back into Logisim!\n# * Anything after a '#' is a comment and will be ignored.\n# * Blank lines and separator lines (e.g., ~~~~~~) are ignored.\n# * Keep column names simple (no spaces, punctuation, etc.)\n# * 'Name[N..0]' indicates an N+1 bit variable, whereas\n#   'Name' by itself indicates a 1-bit variable.\n# * You can use 'x' or '-' to indicate \"don't care\" for both\n#   input and output bits.\n# * You can use binary (e.g., '10100011xxxx') notation or\n#   or hex (e.g., 'C3x'). Logisim will figure out which is which.
tableTxtFileFilter = Logisim-evolution 真值表 (*.txt)
#
# gui/Analyzer.java
#
analyzePleaseWait = 请稍等
analyzerWindowTitle = 综合分析
buildCircuitButton = 构建电路
exportLatexButton = 导出 TeX
exportTableButton = 导出真值表
expressionTab = 表达式
expressionTabTip = 查看和编辑输出的表达式。
importTableButton = 导入真值表
inputsOutputsTab = 输入 & 输出
inputsOutputsTabTip = 查看和编辑 输入/输出 变量
minimizedTab = 卡诺图
minimizedTabTip = 使用卡诺图查看和编辑并显示真值表的最简表达式。
tableTab = 真值表
tableTabTip = 查看和编辑真值表。
#
# gui/BuildCircuitButton.java
#
buildConfirmReplaceMessage = 你确定想要替换电路 %s ?
buildConfirmReplaceTitle = 确认替换
buildDialogErrorTitle = 无法构建电路
buildDialogTitle = 构建电路
buildDuplicatedNameError = 电路名称不能与 输入/输出 相同, 请另外指定一个名称。
buildNameLabel = 电路名称:
buildNandsLabel = 仅使用与非门 (NAND)
buildNeedCircuitError = 必须指定电路名称。
buildNeedProjectError = 必须选择一个目标项目。
buildProjectLabel = 目标项目:
buildTwoInputsLabel = 只使用双输入逻辑门
replaceCircuitAction = 替换电路
#
# gui/CsvReadParameterDialog.java
#
ConfirmCsvParameters = 继续
cvsFilePreview = 预览读入文件的前四行: Preview of the first four rows of the read-in file:
seperatorSpace = {space}
SeperatorTab = {tab}
UsedQuotesInFile = 选择 csv 文件中使用的 "引号 "字符. Select the "quote" character that is used in the csv file:
UsedSeperatorInFile = 选择 csv 文件中使用的 "分隔符". Select the "separator" character that is used in the csv file:
#
# gui/ExportLatexButton.java
#
cantWriteMessage = 无法写入文件: %s 
confirmOverwriteMessage = 确定要覆盖文件 %s ?
confirmOverwriteTitle = 确认覆盖
notFileMessage = %s 不是一个文件
saveButton = 导出真值表
saveErrorTitle = 保存文件出错
#
# gui/ExpressionTab.java
#
cantImportFormatError = 无法导入此格式的文件
outputExpressionEdit = 输出表达式(双击进行编辑):
#
# gui/ImportTableButton.java
#
cantReadMessage = 无法读取文件: %s 
DoNotKnowHowto = 无法读取或写入文件 '%s' (导入的文件扩展名必须是 .txt 或 .csv)。
openButton = 导入真值表
openErrorTitle = 读取文件出错
#
# gui/KarnaughMapPanel.java
#
karnaughNoInputsError = 没有可用的输入。
karnaughNoOutputError = 没有选择输出。
karnaughTooManyInputsError = 表格中的输入太多. Too many inputs for table.
NoSelectedKmapGroup = 没有选择组。
SelectedKmapGroup = 选择组:
#
# gui/MinimizedTab.java
#
expressionAltLogicrepresentation = 命题逻辑 Alternative Logical
expressionCalc = 计算表达式 Calculating Expression
expressionLogicrepresentation = 逻辑 Logical
expressionMathrepresentation = 算术 Mathematical
ExpressionNotation = 表达方式:
expressionProgbitsrepresentation = 位运算符 Programming with bits
expressionProgboolsrepresentation = 布尔运算符 Programming with booleans
KMapLinedStyle = 排 Lined
KmapNumberedStyle = 编号 Numbered
KmapStyle = 样式:
minimizedFormat = 格式:
minimizedProductOfSums = 总和的乘积 Product of sums
minimizedSetButton = 设置当前真值表表达式
minimizedSumOfProducts = 乘积和 Sum of products
#
# gui/OutputSelector.java
#
outputSelectLabel = 输出变量:
#
# gui/TableTab.java
#
tableCompact = 折叠重复的行
tableExpand = 显示所有行
tableNoInputs = (没有输入)
tableNoOutputs = (没有输出)
tableRowsShown = 显示 %d 行，共 %d 行
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = 压缩行数 Compacting Rows
#
# gui/TableTabClip.java
#
clipPasteEndError = 剪贴板内容超出表格。
clipPasteErrorTitle = 粘贴出错
clipPasteSizeError = 粘贴区域必须与剪贴板的大小相同. Paste region must be same size as clipboard.
clipPasteSupportedError = 剪贴板上的内容无法粘贴到编辑器中。
#
# gui/VariableTab.java
#
inputVariables = 输入变量
outputVariables = 输出变量
variableClickToAdd = 单击添加一个新变量
variableDuplicateError = 名称与现有变量重复。
variableMaximumError = (Reached maximum size of %s.)
variablePartError = 名称中不能包含 '%s'。
variableRangeFinalPar = 范围:缺失] 直接在LSB索引之后 Range: missing ] directly after LSB index
variableRangeInvalChar = 范围:关闭后的无效字符] Range: invalid chars after closing ]
variableRangeMSBWrong = 范围:开始[ 后面应该是一个数字 Range: starting [ should be followed by a number
variableRangeStartPar = [范围:缺少开始[ [Range: Missing starting [
variableRangeWrongLB = 范围: MSB指数必须大于/等于LSB指数 Range: MSB index must be bigger/equal LSB index
variableRangeWrongSep = 范围: MSB指数和LSB指数必须以.为分隔. Range: MSB index and LSB index must be separated by ..
variableStartError = 名称必须以字母开头。
#
# model/Entry.java
#
busError = 电路输出矛盾。
oscillateError = 电路震荡。
#
# model/Parser.java
#
badVariableName = "%s" is not an input variable.
implicitAndOperator = (Implicit AND)
invalidCharacterError = 未识别的字符:: '%s'
lparenMissingError = 没有匹配的开头括号。No matching opening parenthesis.
missingBraceError = No matching brace: "%s"
missingIdentifierError = Missing identifier before subscript: "%s"
missingLeftOperandError = Operator "%s" missing left operand.
missingRightOperandError = Operator "%s" missing right operand.
missingSubscriptError = 缺少下标: "%s"
rparenMissingError = No matching closing parenthesis.
unexpectedApostrophe = Unexpected apostrophe ("'")
unexpectedAssignmentError = Unexpected assignment operator: "%s"
#
# model/Var.java
#
badVariableBitFormError = 变量名称必须是 'name[i]' 的形式
badVariableColonError = 变量名称必须在 ':' 之前
badVariableIndexError = 变量位索引必须是一个整数 Variable bit index must be an integer
variableFormat = 变量名的格式必须是 'name[N..0]' Variables must be of the form 'name[N..0]'
variableTooMuchBits = 变量的宽度不能超过32位 Variables can't be more than 32 bits wide


