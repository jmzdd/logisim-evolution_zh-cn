#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCannotHandleError = 由于 %s , 计算真值表而不是表达式。 Computing truth table instead of expression due to %s.
analyzeCircularError = 检测到循环参考;计算真值表代替。 Circular reference detected; computing truth table instead.
analyzeConflictError = 检测到冲突的输出;计算真值表代替。 Conflicting outputs detected; computing truth table instead.
#
# appear/AppearanceAnchor.java
#
appearanceFacingAttr = 外观朝向
circuitAnchor = 固定 Anchor
#
# appear/AppearancePort.java
#
circuitPort = 端口 Port
singleStepMessage = 仿真暂停: %s 信号变化, %s 输入变化。
#
# appear/DynamicElement.java
#
circuitLabelBottom = 底部 Bottom
circuitLabelCenter = 中心 Center
circuitLabelLeft = 左 Left
circuitLabelNone = 无标签 No Label
circuitLabelRight = 右 Right
circuitLabelTop = 顶部 Top
circuitShowLabelAttr = 标签位置 Label Position
#
# Circuit.java
#
changeComponentAttributesAction = 改变一个组件属性的行为 Action that changes a components attribute
ComponentLabelCollisionError = 电路中的一个元件的标签与新放置的元件的名称相同。这个标签已经被删除了！ One component in the circuit has the same label as the component name of the newly placed component. This label has been removed!
ComponentLabelEqualCircuitName = 指定的标签等同于电路名称, 这是不允许的。请指定另一个名称。 The specified label is equal to the circuit name, this is not allowed. Please specify another name.
ComponentLabelNameError = 该标签与电路中使用的元件名称相对应！\n请使用与元件名称不相等的标签。 The label correspond to a component name used in the circuit!\n Please use labels that are not equal to component names.
UsedLabelNameError = 已经有一个组件有这个标签了！\n请在电路中使用唯一的标签。 There exists already a component with this label!\n Please use unique labels in a circuit.
#
# CircuitAttributes.java
#
circuitAppearanceAttr = 外观
circuitCustomAppearance = 自定义
circuitIsVhdl = 参照VHDL架构？ Reference to VHDL architecture?
circuitLabelAttr = 公用的标签 Shared Label
circuitLabelDirAttr = 公用标签面 Shared Label Facing
circuitLabelFontAttr = 公用标签字体 Shared Label Font
circuitLabelLocAttr = 标签位置 Label Location
circuitName = 电路名称
circuitNamedBoxFixedSize = 使用固定的箱体尺寸 Use fixed box-size
CircuitSameInputOutputLabel = 电路名称等同于一个输入或输出的标签。请指定另一个电路名称。 Circuit name equals to a label of an input or an output. Please specify another circuit name.
circuitVhdlPath = VHDL架构文件路径 VHDL architecture file path
EmptyNameError = 每个电路都需要一个名称, 不能允许有一个空的名称。请指定一个非空的电路名称。Each circuit needs a name, cannot allow an empty one. Please specify a non-empty circuit name.
#
# CircuitMutation.java
#
unknownChangeAction = 更改电路 Change Circuit
#
# RadixOption.java
#
radix10Signed = 有符号的十进制 Signed Decimal
radix10Unsigned = 无符号的十进制 Unsigned Decimal
radix16 = 十六进制 Hexadecimal
radix2 = 二进制 Binary
radix8 = 八进制 Octal
radixAttr = 小数 Radix
#
# Splitter.java
#
splitterCombinedTip = 分流器的组合端 Combined end of splitter
splitterSplit0Tip = 没有来自组合端的位数 No bits from combined end
splitterSplit1Tip = 来自组合端的第 %s 位 Bit %s from combined end
splitterSplitManyTip = 来自组合端的第 %s 位 Bits %s from combined end
#
# SplitterAttributes.java
#
splitterAppearanceAttr = 外观
splitterAppearanceCenter = 中心 Centered
splitterAppearanceLeft = 左撇子 Left-handed
splitterAppearanceLegacy = 遗留 Legacy
splitterAppearanceRight = 右撇子 Right-handed
splitterBitAttr = 位 Bit %s
splitterBitNone = 无 None
splitterBitWidthAttr = 位宽 Bit Width In
splitterFanOutAttr = 扇形 Fan Out
splitterSpacing = 间距 Spacing
#
# SplitterDistributeItem.java
#
splitterDistributeAscending = 分布式升序 Distribute Ascending
splitterDistributeDescending = 分布式降序Distribute Descending
#
# SplitterFactory.java
#
splitterComponent = 分流器 Splitter
#
# SubcircuitFactory.java
#
subcircuitViewItem = 查看 %s  View %s
#
# Wire.java
#
wireDirectionAttr = 方向 Direction
wireDirectionHorzOption = 水平的 Horizontal
wireDirectionVertOption = 纵向 Vertical
wireLengthAttr = 长度 Length
#
# WireFactory.java
#
wireComponent = 线 Wire


